<?php



namespace app\api\controller;



use app\common\model\Member;

use app\common\model\YangBill;
use app\common\model\YangCameraModel;

use app\common\model\YangDrugLogModel;

use app\common\model\YangDrugModel;

use app\common\model\YangSickModel;

use app\common\model\YangTenderModel;

use app\common\model\YangYangModel;

use app\common\model\YangYenderReceiveModel;

use app\common\service\Payment;

use app\common\service\Users;
use PhpOffice\PhpWord\TemplateProcessor;
use think\Db;

use think\Config;
use think\exception\ErrorException;






class Yangyang extends Base

{

    public function _initialize()

    {
        header("Content-type:text/html;charset=utf-8");
        parent::_initialize(); // TODO: Change the autogenerated stub
        $this->yang_gengxing();

    }


    //会员状态更新
    public function yang_gengxing(){
        $yang_gengxing =  Db::name('admin')->field('yang_gengxing')->where(['id'=>1])->find();
        $start_date = strtotime(date('Y-m-d'));
        //当天开始时间大于更新时间
        if($start_date>$yang_gengxing['yang_gengxing']){
            //判断羊是否出栏
            $chuinfo = Db::name('yang_yang')->where(['end_date'=>['<',$start_date],'status'=>1])->select();
            if($chuinfo){
                foreach ($chuinfo as $values){
                    //羊出栏是生病状态
                    if($values['yang_sick']==1){
                       $sickinfo =  Db::name('yang_sick')->where(['yang_id'=>$values['id'],'status'=>0])->order('id desc')->find();
                        $cdate=(time()-$sickinfo['start_time'])/86400; //生病间隔天数
                        if($cdate<1){
                            $drug_num = $values['drug_num'];
                        }else{
                            $drug_num = $values['drug_num']+ceil($cdate);
                        }

                        //更改生病状态记录信息
                        Db::name('yang_sick')->where(['id'=>$sickinfo['id']])->update(['end_time'=>time(),'status'=>1,'update_time'=>time()]);

                    }else{
                        $drug_num = $values['drug_num'];
                    }

                    Db::name('yang_yang')->where(['id'=>$values['id']])->update(['yang_sick'=>0,'yang_hunger'=>0,'status'=>2,'drug_num'=>$drug_num]);

                }
            }



            //判断羊饥饿
            Db::name('yang_yang')->where(['status'=>1,'yang_hunger'=>0])->update(['yang_hunger'=>1]);

            //判断羊生病(认养中所有未生病的羊)
            $yanginfo = Db::name('yang_yang')->where(['yang_sick'=>0,'status'=>1])->select();
            if($yanginfo){
                $yang_rate = config('yang_rate');//生病概率
                foreach ($yanginfo as $value){
                    $isnum = rand(1,10000);
                    if($isnum<=$yang_rate){
                        //更改羊生病
                        Db::name('yang_yang')->where(['id'=>$value['id']])->update(['yang_sick'=>1]);
                        //生成羊生病记录
                        $data['uid'] = $value['uid'];
                        $data['yang_id'] = $value['id'];
                        $data['start_time'] = time();
                        $data['status'] = 0;
                        $data['create_time'] = time();
                        $data['update_time'] = time();
                        Db::name('yang_sick')->insert($data);
                    }
                }
            }

            //更新羊更新时间
            Db::name('admin')->where(['id'=>1])->update(['yang_gengxing'=>$start_date]);


        }

    }



    //认养预告
    public function yg_tender($limit=2){

        $lists = Db::name('yang_tender')->where(['status'=>1,'start_time'=>['>',time()]])->field('id,title,photo,num,start_time,price,receive_num,cycle,returns,status')->order('create_time desc')->limit($limit)->select();
        if ($lists) {
            return json(['status' => 1, 'msg' => '', 'data' => $lists]);
        } else {
            return json(['status' => 0, 'msg' => '没有数据']);
        }
    }


    //招标列表

    public function tender(){

      $lists = YangTenderModel::getLists();
        if ($lists) {
            foreach ($lists as $v){
                if($v->start_time > time()){
                    $v->tag=0;
                }else{
                    $v->tag=1;
                }
            }
            return json(['status' => 1, 'msg' => '', 'data' => $lists]);
        } else {
            return json(['status' => 0, 'msg' => '没有数据']);
        }
    }



    public function tender_all($page = 1, $num = 8){
        $lists = YangTenderModel::getAll($page,$num);
        if ($lists) {
            return json(['status' => 1, 'msg' => '', 'data' => $lists]);
        } else {
            return json(['status' => 0, 'msg' => '没有数据']);
        }
    }


    //认领详情
    public function tender_des($id){

        $info =  YangTenderModel::get($id);

            if($info->start_time > time()){
                $info->tag=0;
            }else{
                $info->tag=1;
            }


        if ($info) {

            return json(['status' => 1, 'msg' => '', 'data' => $info]);

        } else {

            return json(['status' => 0, 'msg' => '没有数据']);

        }

    }



    //认养

    public function receive($id,$num,$pay_type='wxpay'){

        if (!$uid = get_uid()) {
            return json(['status' => 0, 'msg' => '未登录，请先登录']);
        }

        //判断 这个标的状态
        $YangTenderModel=new YangTenderModel();
        $info = $YangTenderModel->get($id);
        if($info->status == 0){
            return json(['status' => 0, 'msg' => '该认养已结束']);
        }
        if($info->start_time > time()){
            return json(['status' => 0, 'msg' => '该认养还未开始']);
        }

        //剩余数量
        if(($info->receive_num + $num) > $info->num){
            return json(['status' => 0, 'msg' => '认养数量不足']);
        }

        //这个人的数量是否超了
        $yang_ing=Db::name('member')->where(['id'=>$uid])->value('yang_ing');
       $user_yang_max= config('user_yang_max');
        if($yang_ing+$num > $user_yang_max ){
            return json(['status' => 0, 'msg' => '您最多只能再认养'.($user_yang_max-$yang_ing).'只小羊']);
        }

        $money = $num*$info->price;
        $Payment=new Payment();

        if($pay_type == 'alipay'){
            $res =  $Payment->ali_app($uid,'认养小羊',time(), $money,['method'=>'buy_yang','param'=>['uid'=>$uid,'tender_id'=>$id,'receive_num'=>$num,'receive_price'=>$info->price]]);
        }else{
            if(is_weixin()){
                //  $res= $Payment->wx_wap($uid,'认养小羊','yangyangyangyang',$money,['method'=>'buy_yang','param'=>['uid'=>$uid,'tender_id'=>$id,'receive_num'=>$num,'receive_price'=>$info->price]]);
                $openid = Db::name('oauth_user')->where(['from' => 'weixin', 'uid' => $uid])->value('openid');
                $res = $Payment->wx_pub($openid, $uid, '认养小羊', time(), $money,['method'=>'buy_yang','param'=>['uid'=>$uid,'tender_id'=>$id,'receive_num'=>$num,'receive_price'=>$info->price]],'认养小羊');
            }else{
                $res =  $Payment->wx_app($uid,'认养小羊',  time(), $money,['method'=>'buy_yang','param'=>['uid'=>$uid,'tender_id'=>$id,'receive_num'=>$num,'receive_price'=>$info->price]],'认养小羊');
            }
        }

        return json($res);
    }


    //会员中心认养记录
    public function receive_userlists($page=1){

        if (!$uid = get_uid()) {
            return json(['status' => 0, 'msg' => '未登录，请先登录']);
        }
        $lists =  YangYenderReceiveModel::getListsByUids($uid,$page);
        foreach ($lists as $key=>$vlues){
            $info = Db::name('yang_tender')->field('title,photo')->where(['id'=>$vlues['tender_id']])->find();
            if($info) {
                $lists[$key]['title'] = $info['title'];
                $lists[$key]['photo'] = $info['photo'];
            }
        }
        return json(['status' => 1,'data'=>$lists, 'msg' => '']);

    }


    //认养记录列表
    public function receive_lists(){

        if (!$uid = get_uid()) {
            return json(['status' => 0, 'msg' => '未登录，请先登录']);
        }
        $lists =  YangYenderReceiveModel::getListsByUid($uid);
        return json(['status' => 1,'data'=>$lists, 'msg' => '']);

    }


    //会员中心羊列表
    public function yang_userlists($status=1,$page=1){
        if (!$uid = get_uid()) {
            return json(['status' => 0, 'msg' => '未登录，请先登录']);
        }
        $lists = YangYangModel::getListsByUids($uid,$status,$page);
        /* foreach ($lists as $key=>$vlues){
             $info = Db::name('yang_tender')->field('title,photo')->where(['id'=>$vlues['tender_id']])->find();
             $lists[$key]['title'] = $info['title'];
             $lists[$key]['photo'] = $info['photo'];
         }*/
        return json(['status' => 1,'data'=>$lists, 'msg' => '']);
    }



    //羊列表
    public function yang_lists(){
        if (!$uid = get_uid()) {
            return json(['status' => 0, 'msg' => '未登录，请先登录']);
        }
        $lists = YangYangModel::getListsByUid($uid);
        return json(['status' => 1,'data'=>$lists, 'msg' => '']);
    }

    //查看羊状态
    public function yang_info($id){

        if (!$uid = get_uid()) {
            return json(['status' => 0, 'msg' => '未登录，请先登录']);
        }

        $info = YangYangModel::getInfoByYid($uid,$id);
        return json(['status' => 1,'data'=>$info, 'msg' => '']);

    }


    //好友羊列表
    public function hyyang_lists($yuid){
        if (!$uid = get_uid()) {
            return json(['status' => 0, 'msg' => '未登录，请先登录']);
        }
        if(!$yuid){
            return json(['status' => 0, 'msg' => '参数错误']);
        }
        $user = new Users();
        $hy = $user->refer_yang($uid,$yuid);
        if($hy['code']){
            $lists = YangYangModel::getListsByUid($yuid);
            return json(['status' => 1,'data'=>$lists, 'msg' => '']);
        }else{
            return json($hy);
        }
    }



    //好友查看羊状态
    public function hyyang_info($id,$yuid){

        if (!$uid = get_uid()) {
            return json(['status' => 0, 'msg' => '未登录，请先登录']);
        }
        if(!$id || !$yuid){
            return json(['status' => 0, 'msg' => '参数错误']);
        }
        $user = new Users();
        $hy = $user->refer_yang($uid,$yuid);
        if($hy['code']){
            $info = YangYangModel::getInfoByYid($yuid,$id);
            return json(['status' => 1,'data'=>$info, 'msg' => '']);
        }else{
            return json($hy);
        }
    }



    //药品列表
    public function  drug_lists(){

        if (!$uid = get_uid()) {
            return json(['status' => 0, 'msg' => '未登录，请先登录']);
        }

        $info = YangDrugModel::getInfo();
        return json(['status' => 1,'data'=>$info, 'msg' => '']);

    }


    //买药
    public function buy_drug($id,$num,$pay_type='wxpay'){

        if (!$uid = get_uid()) {
            return json(['status' => 0, 'msg' => '未登录，请先登录']);
        }

       $drug_info = YangDrugModel::where(['id'=>$id,'status'=>1])->find();
       $money = $drug_info->price * $num;
        $Payment=new Payment();

        if($pay_type == 'alipay'){
            $res =  $Payment->ali_app($uid,'游戏药品',time(), $money,['method'=>'buy_drug','param'=>['uid'=>$uid,'id'=>$id,'num'=>$num]]);
        }else{
            if(is_weixin()){
                // $res= $Payment->wx_wap($uid,'游戏药品','ididididiididi',$money,['method'=>'buy_drug','param'=>['uid'=>$uid,'id'=>$id,'num'=>$num]]);
                $openid = Db::name('oauth_user')->where(['from' => 'weixin', 'uid' => $uid])->value('openid');
                $res = $Payment->wx_pub($openid, $uid, '游戏药品', time(), $money,['method'=>'buy_drug','param'=>['uid'=>$uid,'id'=>$id,'num'=>$num]],'游戏药品');
            }else{
               $res =  $Payment->wx_app($uid,'游戏药品',time(), $money,['method'=>'buy_drug','param'=>['uid'=>$uid,'id'=>$id,'num'=>$num]],'游戏药品');
            }
        }

        return json($res);

    }


    //喂药
    public function take_drug($yid){

        if (!$uid = get_uid()) {
            return json(['status' => 0, 'msg' => '未登录，请先登录']);
        }

        //查看用户有药吗

        $Member= new Member();
        $userinfo = $Member->get($uid);
        if($userinfo->drug_count<1){
            return json(['status' => 0, 'msg' => '药品数量不足']);
        }

        //查看羊病了吗
        $YangYangModel=   new YangYangModel();
        $yanginfo=$YangYangModel->get($yid);
        if($yanginfo->yang_sick !=1){
            return json(['status' => 0, 'msg' => '小羊很健康，不需要吃药!']);
        }

        //修改病羊的时间
        $YangSickModel=new YangSickModel();
        $yangSick = $YangSickModel->get(['yang_id'=>$yid,'status'=>0]);
        if(!$yangSick){
            return json(['status' => 1, 'msg' => '没有找到生病的记录']);
        }
        $yangSick->end_time=time();
        $yangSick->status=1;
        $yangSick->save();

        //修改羊状态
        $yanginfo->yang_sick=0;
        $sick_day=0;
        //在加一个判断看看 羊的时间间隔是多久
        $days1 = date('Ymd',$yangSick->start_time);
        $days2 = date('Ymd',$yangSick->end_time);
        $sick_day = $days2-$days1;
        if($sick_day>0){
            $yanginfo->drug_num= $yanginfo->drug_num+$sick_day;
        }
        $yanginfo->save();

        //增加药品记录
        $YangDrugLogModel=new YangDrugLogModel();
        $YangDrugLogModel->log($uid,1,2,$yid);

        //减少药品数量
        $userinfo->setDec('drug_count',1);
        return json(['status' => 1, 'msg' => '小羊已经吃药了,很快康复']);

    }



    public function camera_lists(){

        $lists = YangCameraModel::getLists();
        if ($lists) {
            return json(['status' => 1, 'msg' => '', 'data' => $lists]);
        } else {
            return json(['status' => 0, 'msg' => '没有数据']);
        }

    }



    public function camera($id){

        $info =  YangCameraModel::get($id);
        //处理下 url
        $info->m3u8='http://hls.open.ys7.com/openlive/fd92cee0e6fe4420a6c45ca929b61d76.m3u8';
        $info->rtmp='rtmp://rtmp.open.ys7.com/openlive/fd92cee0e6fe4420a6c45ca929b61d76';
        if ($info) {
            return json(['status' => 1, 'msg' => '', 'data' => $info]);
        } else {
            return json(['status' => 0, 'msg' => '没有数据']);
        }

    }



    /**
     *  文章
     *@param	$cate_id   文章类型
     */
    public function article($cate_id,$page)
    {
        if($cate_id != ''){
            $info = Db::name('article')->where(array('cate_id'=>$cate_id))->page($page, 10)->order('id desc')->select();
            if ($info) {
                $data['code'] = 1;
                $data['datas'] = $info;
                $data['msg'] = '';
            } else {
                $data['code'] = 1;
                $data['datas'] = "";
                $data['msg'] = '';
            }
        }else{
            $data['code'] = 0;
            $data['datas'] = "";
            $data['msg'] = '参数错误';
        }
        return json(['status'=>$data['code'],'data'=>$data['datas'],'msg'=>$data['msg']]);

    }

    /**
 *  文章详情
 *@param	$article_id   文章id
 */
    public function article_desc($article_id){

        if($article_id){
            $info = Db::name('article')->where(['id'=>$article_id])->find();
            if ($info) {
                $data['code'] = 1;
                $data['datas'] = $info;
                $data['msg'] = '';
            } else {
                $data['code'] = 1;
                $data['datas'] = "";
                $data['msg'] = '';
            }
        }else{
            $data['code'] = 0;
            $data['datas'] = "";
            $data['msg'] = '参数错误';
        }
        return json(['status'=>$data['code'],'data'=>$data['datas'],'msg'=>$data['msg']]);
    }


    /**
     *  最新信息
     *@param	$types   文章分类
     */
    public function zarticle_desc($types){

        if($types){
            $info = Db::name('article')->where(['cate_id'=>$types])->order('id desc')->find();
            if ($info) {
                $data['code'] = 1;
                $data['datas'] = $info;
                $data['msg'] = '';
            } else {
                $data['code'] = 1;
                $data['datas'] = "";
                $data['msg'] = '';
            }
        }else{
            $data['code'] = 0;
            $data['datas'] = "";
            $data['msg'] = '参数错误';
        }
        return json(['status'=>$data['code'],'data'=>$data['datas'],'msg'=>$data['msg']]);
    }


    /**
     *  好友牧场状态
     *@param	$yuid   好友id
     */
    public function hyyang_status($yuid){

        if (!$uid = get_uid()) {
            return json(['status' => 0, 'data'=>'未登录，请先登录', 'msg' => '未登录，请先登录']);
        }
        if(!$yuid){
            return json(['status' => 0,'data'=>'参数错误', 'msg' => '参数错误']);
        }
        $user = new Users();
        $hy = $user->refer_yang($uid,$yuid);
        if($hy['code']){
            $yinfo = $hy['data'];
            if($yinfo['yang_ing']<=0){
                //好友牧场无认养中的羊
                return json(['status' => 1,'data'=>'牧场无认养中的羊', 'msg' => '']);
            }else{
                $map['uid'] = $yuid;
                $map['status'] = 1;
                $map['yang_hunger'] = 1;
                $YangYangModel=   new YangYangModel();
                $jie_count = $YangYangModel->getAllCount($map);//饥饿羊数量
                $maps['uid'] = $yuid;
                $maps['status'] = 1;
                $maps['yang_sick'] = 1;
                $bing_count = $YangYangModel->getAllCount($maps);//生病羊数量
                if(!$jie_count && !$bing_count){
                    return json(['status' => 1,'data'=>'牧场的羊很健康', 'msg' => '']);
                }else{
                    if($jie_count && $bing_count){
                        return json(['status' => 2,'data'=>'牧场的羊正在生病和饥饿状态', 'msg' => '']);
                    }else{
                        if($jie_count){
                            return json(['status' => 2,'data'=>'牧场的羊正在饥饿状态', 'msg' => '']);
                        }else{
                            return json(['status' => 2,'data'=>'牧场的羊正在生病状态', 'msg' => '']);
                        }
                    }
                }
            }
            return json(['status' => 1,'data'=>'', 'msg' => '']);
        }else{
            return json(['status' => 1,'data'=>$hy['msg'], 'msg' => '']);
        }
    }


    public function share(){
        if (!$uid = get_uid()) {
            return json(['status' => 0, 'msg' => '未登录，请先登录']);
        }
        $share_tag=date('Y-m-d');
        //先查询是否已经分享过了
        if(!Db::name('yang_share')->where(['uid'=>$uid,'share_tag'=>$share_tag])->count()){
            Db::name('yang_share')->insert([
                'uid'=>$uid,
                'create_time'=>time(),
                'update_time'=>time(),
                'share_tag'=>$share_tag,
            ]);
            //增加所有羊的 分享次数 和 饥饿状态
            Db::name('yang_yang')->where(['uid'=>$uid,'status'=>1])->update([
                'yang_hunger'=>0,
                'share_num'=>Db::raw('share_num+1'),
            ]);
            return json(['code'=>1,'msg'=>'分享成功']);
        }else{
            return json(['code'=>0,'msg'=>'未知错误']);
        }   
       

    }


    public function yang_desc($yang_id){
        if (!$uid = get_uid()) {
            return json(['code' => 0, 'msg' => '未登录，请先登录']);
        }
        $info = Db::name('yang_yang')->where(['uid'=>$uid,'id'=>$yang_id])->find();
        if(!$info){
            return json(['code' => 0, 'msg' => '信息不存在']);
        }
        if($info['status'] ==2){
            $huansuan=YangBill::huansuan($info);
            $info['ji_e']= $huansuan['ji_e'];
            $info['zhong_liang']= $huansuan['zhong_liang'];
            $info['jia_ge']= $huansuan['jia_ge'];
        }
        return json(['code' => 1, 'msg' => '','data'=>$info]);
    }
    //1 要钱  2要肉
    public function yang_submit($yang_id,$type=1,$add_id=0){
        if (!$uid = get_uid()) {
            return json(['code' => 0, 'msg' => '未登录，请先登录']);
        }
        $info = Db::name('yang_yang')->where(['uid'=>$uid,'id'=>$yang_id])->find();
        if(!$info){
            return json(['code' => 0, 'msg' => '信息不存在']);
        }
        if($info['status'] !=2){
            return json(['code' => 0, 'msg' => '当前状态不能执行该操作']);
        }
        if($info['is_submit']){
            return json(['code' => 0, 'msg' => '您已经成功提交,请等待后台处理']);
        }
        if($type == 2 && !$add_id){
            return json(['code' => 0, 'msg' => '请填写收货地址']);
        }
        //开始换算
        $huansuan=YangBill::huansuan($info);
        $info['zhong_liang']= $huansuan['zhong_liang'];
        $info['jia_ge']= $huansuan['jia_ge'];
        $order_id=0;
        $true_money=0;
        if($type == 2 ){
            //下订单
            $num=$huansuan['zhong_liang']*100; //按10g 一个商品
            $res = $this->add_order($uid,$add_id,$num);
            if(!$res['code']){
                return json($res);
            }else{
                $order_id =  $res['data'];
            }
        }else{
            //给币
            $fx_tixian = config('fx_tixian');
            $true_money =$huansuan['jia_ge'] - $huansuan['jia_ge'] * $fx_tixian*0.01;
        }
        //插入数据
        $id=Db::name('yang_bill')->insert([
            'uid'=>$uid,
            'yang_id'=>$yang_id,
            'tender_id'=>$info['tender_id'],
            'receive_id'=>$info['receive_id'],
            'exchange_type'=>$type,
            'yang_start_time'=>$info['start_date'],
            'yang_end_time'=>$info['end_date'],
            'yang_sick'=>$info['drug_num'],
            'yang_hunger'=>$huansuan['ji_e'],
            'weight'=>$huansuan['zhong_liang'],
            'order_id'=>$order_id,
            'status'=>1,
            'result_price'=>$huansuan['jia_ge'],
            'true_money'=>$true_money,
            'create_time'=>time(),
            'update_time'=>time(),
        ],false,true);
        if($id){
            Db::name('yang_yang')->where(['uid'=>$uid,'id'=>$yang_id])->update(['is_submit'=>1]);
        }
        return json(['code' => 1, 'msg' => '您已经成功提交,请等待后台处理']);


    }



    public function get_contract($receive_id){
        if (!$uid = get_uid()) {
            return json(['code' => 0, 'msg' => '未登录，请先登录']);
        }
        //获取 认购Id

        $info = Db::name('yang_tender_receive')->where(['uid'=>$uid,'id'=>$receive_id])->find();
        if(!$info){
            return json(['code' => 0, 'msg' => '信息不存在']);
        }
        $user=Db::name('member')->find($info['uid']);

        $dir='../data/contract/'.$info['tender_id'];
        $file_name=$user['id'].'_'.$info['id'].'.docx';
        $src = $dir.'/'.$file_name;
        if(!is_file($src)){
            $data=[
                'bianhao'=>$info['id'],
                'username'=>$user['account'],
                'phone'=>$user['account'],
                'order_id'=>$info['id'],
                'order_num'=>$info['receive_num'],
                'order_price'=>$info['receive_num']*$info['receive_price'],
            ];
            $tempPlete = new TemplateProcessor('../Template.docx');
            foreach($data as $k=>$v){
                $tempPlete->setValue($k,$v);
            }
            if(!is_dir($dir)){
                if(!mkdir($dir,0777,true)){
                    new ErrorException('/data/contract 目录无法写入');
                };
            }
            $res = $tempPlete->saveAs($src); // 文件通过浏览器下载
        }
        $str =think_encrypt($src,'',120);
        $this->redirect('/api/yangyang/out_file/file/'.$str);

    }

    public function out_file($file){
        $src = think_decrypt($file);

        if(!$src){
            die("无效文件");
        }
        $arr = (explode('\\',$src));
        $name=end($arr);

        $html2 =file_get_contents($src);
        header("Content-type: application/octet-stream");
        header("Accept-Ranges: bytes");
        header("Accept-Length: ".strlen($html2));
        header("Content-Disposition: attachment;filename=$name");
        header("Pragma:no-cache");
        header("Expires:0");
        echo $html2;
    }

    protected function add_order($uid,$address_id,$num){
        $orderModel =  new \app\common\model\Order();
        $res = $orderModel->addOrder2($uid, $address_id,1,$num, $user_note = '', $invoice_title = '', $pay_name = '兑换');
        if ($res['code']) {
          return $res;
        }else{
            return ['code'=>0,'msg'=>'订单错误'];
        }

    }
















}